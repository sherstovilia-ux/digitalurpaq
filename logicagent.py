import streamlit as st
import time
from streamlit_lottie import st_lottie
import requests
import json
import os

# ---- Page setup ----
st.set_page_config(
    page_title="Digital Urpaq Support Bot",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# ---- CSS ----
st.markdown("""
<style>
header {visibility: hidden;}
footer {visibility: hidden;}
#MainMenu {visibility: hidden;}
.block-container {padding-top: 1rem; padding-bottom: 1rem;}
.chat-bubble {border-radius: 20px; padding: 10px 15px; margin: 8px 0; max-width: 80%; word-wrap: break-word;}
.user-bubble {background-color: #DCF8C6; align-self: flex-end;}
.bot-bubble {background-color: #F1F0F0; align-self: flex-start;}
.chat-container {display: flex; flex-direction: column; position: relative;}
.background-lottie {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: 120px;
    z-index: 10;
    opacity: 0.7;
}
</style>
""", unsafe_allow_html=True)

# ---- Load Lottie animation ----
def load_lottie_url(url):
    try:
        r = requests.get(url)
        if r.status_code != 200:
            return None
        return r.json()
    except:
        return None

def load_lottie_local(path):
    try:
        with open(path, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return None

# Try network first, fallback to local
lottie_robot = load_lottie_url("https://assets9.lottiefiles.com/packages/lf20_q5pk6p1k.json")
if not lottie_robot:
    lottie_robot = load_lottie_local("robot.json")  # Make sure this file exists

# ---- Responses ----
responses = {
    "–∫–æ–Ω—Ç–∞–∫—Ç—ã": "üìû –ê–¥—Ä–µ—Å: —É–ª. –ñ–∞–º–±—ã–ª–∞ –ñ–∞–±–∞–µ–≤–∞ 55–ê, –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫. –¢–µ–ª–µ—Ñ–æ–Ω: 8 7152 34-02-40. –°–∞–π—Ç: https://digitalurpaq.edu.kz/ru/kkbajlanysrukontakty.html",
    "–∞–∫—Ç–æ–≤—ã–π –∑–∞–ª": "üé≠ –í –∑–¥–∞–Ω–∏–∏ —Ç—Ä–∏ –∞–∫—Ç–æ–≤—ã—Ö –∑–∞–ª–∞: –ø–µ—Ä–≤—ã–π –Ω–∞–¥ –ª–æ–±–±–∏, –≤—Ç–æ—Ä–æ–π –≤ –ª–µ–≤–æ–º –∫—Ä—ã–ª–µ, —Ç—Ä–µ—Ç–∏–π –≤ —É—á–µ–±–Ω–æ–º –±–ª–æ–∫–µ —Ä—è–¥–æ–º —Å IT-–∫–∞–±–∏–Ω–µ—Ç–∞–º–∏.",
    "–ø–æ–º–æ—â—å": "üß≠ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: –∫–∞–±–∏–Ω–µ—Ç <–Ω–∞–∑–≤–∞–Ω–∏–µ>, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –∞–∫—Ç–æ–≤—ã–π –∑–∞–ª, –∑–∞–ø–∏—Å—å, –ø–æ–º–æ—â—å.",
    "–∑–∞–ø–∏—Å—å": "üóìÔ∏è –û–Ω–ª–∞–π–Ω-—Ñ–æ—Ä–º–∞: https://docs.google.com/forms/d/e/1FAIpQLSc5a5G0CY5XuOCpVHcg7qTDBdEGGkyVEjuBwihpfHncDCqv2A/viewform",
}

cabinet_map = {
    "–ª–µ–≥–æ": "üß© –ö–∞–±–∏–Ω–µ—Ç LEGO-–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî 1 —ç—Ç–∞–∂, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ, —Ç—Ä–µ—Ç–∏–π —Å–ø—Ä–∞–≤–∞ –æ—Ç –≤—Ö–æ–¥–∞.",
    "—Ñ–∏–∑–∏–∫–∞": "‚öõÔ∏è –ö–∞–±–∏–Ω–µ—Ç –§–∏–∑–∏–∫–∏ ‚Äî –ª–µ–≤–æ–µ –∫—Ä—ã–ª–æ, 3 —ç—Ç–∞–∂, —Ä—è–¥–æ–º —Å –ê—Å—Ç—Ä–æ–Ω–æ–º–∏–µ–π.",
    "—à–∞—Ö–º–∞—Ç—ã": "‚ôüÔ∏è –ö–∞–±–∏–Ω–µ—Ç –®–∞—Ö–º–∞—Ç ‚Äî –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ, 1 —ç—Ç–∞–∂, —Ä—è–¥–æ–º —Å –õ–µ–≥–æ.",
    "–±–∏–æ–ª–æ–≥–∏—è": "üß¨ –ö–∞–±–∏–Ω–µ—Ç –ë–∏–æ–ª–æ–≥–∏–∏ ‚Äî 3 —ç—Ç–∞–∂, —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å, –±–ª–æ–∫ –î1.",
    "—ç–ª–µ–∫—Ç—Ä–∏–∫–∞": "üí° –ö–∞–±–∏–Ω–µ—Ç –≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∏ ‚Äî 2 —ç—Ç–∞–∂, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ.",
    "–¥—Ä–æ–Ω—ã": "üöÅ –ö–∞–±–∏–Ω–µ—Ç –î—Ä–æ–Ω–æ–≤ ‚Äî 2 —ç—Ç–∞–∂, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ.",
    "3–¥ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è": "üñ®Ô∏è –ö–∞–±–∏–Ω–µ—Ç 3D-–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî 2 —ç—Ç–∞–∂, IT-–±–ª–æ–∫, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ.",
    "—Ä–æ–±–æ—Ç—ã": "ü§ñ –ö–∞–±–∏–Ω–µ—Ç –†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏ ‚Äî 2 —ç—Ç–∞–∂, –ª–µ–≤–æ–µ –∫—Ä—ã–ª–æ, –∫–æ–Ω–µ—Ü –∫–æ—Ä–∏–¥–æ—Ä–∞.",
    "–≤—Ä": "üï∂Ô∏è VR-–∫–∞–±–∏–Ω–µ—Ç ‚Äî 2 —ç—Ç–∞–∂, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ.",
    "–ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏–µ": "üíª –ö–∞–±–∏–Ω–µ—Ç –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî 2 —ç—Ç–∞–∂, –¥–∞–ª—å–Ω–µ–µ –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ.",
    "–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏–µ": "üéûÔ∏è –ö–∞–±–∏–Ω–µ—Ç –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî 2 —ç—Ç–∞–∂, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ.",
    "—ç–∫–æ–Ω–æ–º–∏–∫–∞": "üí∞ –ö–∞–±–∏–Ω–µ—Ç –≠–∫–æ–Ω–æ–º–∏–∫–∏ ‚Äî 2 —ç—Ç–∞–∂, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ.",
    "—Ä–∏—Å–æ–≤–∞–Ω–∏–µ": "üé® –ö–∞–±–∏–Ω–µ—Ç –†–∏—Å–æ–≤–∞–Ω–∏—è ‚Äî 3 —ç—Ç–∞–∂, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ.",
}

# ---- Session state ----
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "bot", "text": "–ü—Ä–∏–≤–µ—Ç! ü§ñ –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ Digital Urpaq. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –∫–∞–±–∏–Ω–µ—Ç–∞—Ö, –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö –∏–ª–∏ –∑–∞–ø–∏—Å–∏."}]

# ---- Chat UI ----
st.title("ü§ñ Digital Urpaq Support Bot")
chat_placeholder = st.empty()

def render_chat():
    chat_placeholder.empty()
    with chat_placeholder.container():
        st.markdown('<div class="chat-container">', unsafe_allow_html=True)
        for msg in st.session_state.messages:
            bubble_class = "user-bubble" if msg["role"] == "user" else "bot-bubble"
            st.markdown(f'<div class="chat-bubble {bubble_class}">{msg["text"]}</div>', unsafe_allow_html=True)
        st.markdown("</div>", unsafe_allow_html=True)

render_chat()

# ---- Input area ----
st.markdown("---")
user_input = st.text_input("‚úèÔ∏è –í–∞—à –≤–æ–ø—Ä–æ—Å:", key="input", placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
col1, col2 = st.columns([5, 1])
with col2:
    send = st.button("üì©")

# ---- Render robot animation safely ----
if lottie_robot:
    st_lottie(lottie_robot, height=120, key="background_robot")
else:
    st.warning("ü§ñ Robot animation failed to load. Please check your 'robot.json' file.")

# ---- Chat logic ----
if send and user_input:
    user_msg = user_input.strip()
    st.session_state.messages.append({"role": "user", "text": user_msg})

    # Simulate thinking
    time.sleep(1.5)

    # Determine reply
    message = user_msg.lower()
    reply = None
    if "–∫–∞–±–∏–Ω–µ—Ç" in message:
        for name, location in cabinet_map.items():
            if name in message:
                reply = location
                break
        if not reply:
            reply = "üè¢ –£—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞."
    else:
        for k, v in responses.items():
            if k in message:
                reply = v
                break
    if not reply:
        reply = "‚ùì –ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ù–∞–ø–∏—à–∏—Ç–µ '–ø–æ–º–æ—â—å'."

    st.session_state.messages.append({"role": "bot", "text": reply})
    render_chat()

