import streamlit as st
import edge_tts
import asyncio
from pathlib import Path

st.set_page_config(page_title="Text-to-Speech Demo", page_icon="üîä")

st.title("üîä Text-to-Speech Demo with edge-tts")

# –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
text_input = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è:")

voice_options = [
    "en-US-AriaNeural",
    "en-US-GuyNeural",
    "en-GB-LibbyNeural",
    "ru-RU-DariyaNeural"
]

voice_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å:", voice_options)

output_file = Path("output.mp3")

async def tts(text, voice, filename):
    communicate = edge_tts.Communicate(text, voice)
    await communicate.save(filename)

if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—á—å"):
    if not text_input.strip():
        st.warning("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è!")
    else:
        st.info("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—á—å...")
        asyncio.run(tts(text_input, voice_choice, output_file))
        st.success("–ì–æ—Ç–æ–≤–æ! üéâ")
        st.audio(str(output_file), format="audio/mp3")
