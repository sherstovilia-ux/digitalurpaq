import streamlit as st
from google.cloud import texttospeech
from io import BytesIO

st.set_page_config(page_title="Digital Urpaq Support Bot", layout="wide")

# ---- Session ----
if "messages" not in st.session_state:
    st.session_state.messages = [{
        "role": "bot",
        "text": "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ Digital Urpaq. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –∫–∞–±–∏–Ω–µ—Ç–∞—Ö, –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö –∏–ª–∏ –∑–∞–ø–∏—Å–∏."
    }]
if "tts_enabled" not in st.session_state:
    st.session_state.tts_enabled = True
if "last_audio" not in st.session_state:
    st.session_state.last_audio = None

# ---- TTS Function ----
def make_tts(text: str, lang_code: str):
    client = texttospeech.TextToSpeechClient()
    if lang_code == "kk":
        language = "kk-KZ"
        voice_name = "kk-KZ-Standard-A"
    else:
        language = "ru-RU"
        voice_name = "ru-RU-Standard-D"

    synthesis_input = texttospeech.SynthesisInput(text=text)
    voice_params = texttospeech.VoiceSelectionParams(
        language_code=language,
        name=voice_name,
        ssml_gender=texttospeech.SsmlVoiceGender.NEUTRAL
    )
    audio_config = texttospeech.AudioConfig(audio_encoding=texttospeech.AudioEncoding.MP3)
    response = client.synthesize_speech(input=synthesis_input, voice=voice_params, audio_config=audio_config)
    return BytesIO(response.audio_content)  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –±—É—Ñ–µ—Ä

# ---- Simple Chat ----
st.title("ü§ñ Digital Urpaq Support Bot")

for msg in st.session_state.messages:
    role = "User" if msg["role"] == "user" else "Bot"
    st.markdown(f"**{role}:** {msg['text']}")

user_input = st.text_input("–í–∞—à –≤–æ–ø—Ä–æ—Å:")
if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å") and user_input:
    st.session_state.messages.append({"role": "user", "text": user_input})
    
    # ---- Simple reply logic ----
    reply = ""
    if "–∫–∞–±–∏–Ω–µ—Ç" in user_input.lower():
        reply = "–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫–æ–π –∫–∞–±–∏–Ω–µ—Ç?"
    else:
        reply = "–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É."

    st.session_state.messages.append({"role": "bot", "text": reply})

    # ---- TTS ----
    if st.session_state.tts_enabled:
        audio_bytes = make_tts(reply, "ru")
        st.audio(audio_bytes, format="audio/mp3", start_time=0)
        st.session_state.last_audio = audio_bytes

