import streamlit as st
from google.cloud import texttospeech
import io

# ---- Page setup ----
st.set_page_config(page_title="Digital Urpaq Support Bot", layout="wide")

# ---- CSS ----
st.markdown("""
<style>
header, footer, #MainMenu {visibility: hidden;}
.banner img {
    width: 100%;
    max-height: 250px;
    object-fit: cover;
    border-radius: 10px;
}
.chat-bubble {
    border-radius: 20px;
    padding: 10px 15px;
    margin: 8px 0;
    max-width: 80%;
    word-wrap: break-word;
}
.user-bubble {background-color: #DCF8C6; align-self: flex-end;}
.bot-bubble {background-color: #F1F0F0; align-self: flex-start;}
.chat-container {display: flex; flex-direction: column; max-height: 500px; overflow-y: auto;}
</style>
""", unsafe_allow_html=True)

# ---- Banner ----
st.markdown("""
<div class="banner">
    <img src="https://s12.gifyu.com/images/b36xz.gif" alt="Banner">
</div>
""", unsafe_allow_html=True)

# ---- Session State ----
if "lang" not in st.session_state:
    st.session_state.lang = "ru"
if "messages" not in st.session_state:
    st.session_state.messages = [{
        "role": "bot",
        "text": "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ Digital Urpaq. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –∫–∞–±–∏–Ω–µ—Ç–∞—Ö, –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö –∏–ª–∏ –∑–∞–ø–∏—Å–∏."
    }]
if "tts_enabled" not in st.session_state:
    st.session_state.tts_enabled = True

# ---- Language Switcher ----
col1, col2 = st.columns([4, 1])
with col2:
    if st.button("“ö–∞–∑ / –†—É—Å"):
        st.session_state.lang = "kk" if st.session_state.lang == "ru" else "ru"
        st.session_state.messages.append({
            "role": "bot",
            "text": "–¢—ñ–ª “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–µ –∞—É—ã—Å—Ç—ã—Ä—ã–ª–¥—ã." if st.session_state.lang == "kk"
            else "–Ø–∑—ã–∫ –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π."
        })
        st.experimental_rerun()

# ---- Responses ----
responses_ru = {
    "–∫–æ–Ω—Ç–∞–∫—Ç—ã": "–ê–¥—Ä–µ—Å: —É–ª. –ñ–∞–º–±—ã–ª–∞ –ñ–∞–±–∞–µ–≤–∞ 55–ê, –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫. –¢–µ–ª–µ—Ñ–æ–Ω: 8 7152 34-02-40. –¢–∞–∫–∂–µ —Å–º–æ—Ç—Ä–∏—Ç–µ —Å–∞–π—Ç: https://digitalurpaq.edu.kz/ru/kkbajlanysrukontakty.html",
    "–∞–∫—Ç–æ–≤—ã–π –∑–∞–ª": "–í –∑–¥–∞–Ω–∏–∏ —Ç—Ä–∏ –∞–∫—Ç–æ–≤—ã—Ö –∑–∞–ª–∞: –ø–µ—Ä–≤—ã–π ‚Äî –Ω–∞–¥ –ª–æ–±–±–∏, –≤—Ç–æ—Ä–æ–π ‚Äî –≤ –ª–µ–≤–æ–º –∫—Ä—ã–ª–µ, —Ç—Ä–µ—Ç–∏–π ‚Äî –≤ —É—á–µ–±–Ω–æ–º –±–ª–æ–∫–µ —Ä—è–¥–æ–º —Å IT-–∫–∞–±–∏–Ω–µ—Ç–∞–º–∏.",
    "–ø–æ–º–æ—â—å": "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: –∫–∞–±–∏–Ω–µ—Ç <–Ω–∞–∑–≤–∞–Ω–∏–µ>, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –∞–∫—Ç–æ–≤—ã–π –∑–∞–ª, –∑–∞–ø–∏—Å—å, –ø–æ–º–æ—â—å.",
    "–∑–∞–ø–∏—Å—å": "–û–Ω–ª–∞–π–Ω-—Ñ–æ—Ä–º–∞: https://docs.google.com/forms/d/e/1FAIpQLSc5a5G0CY5XuOCpVHcg7qTDBdEGGkyVEjuBwihpfHncDCqv2A/viewform",
}
responses_kk = {
    "–±–∞–π–ª–∞–Ω—ã—Å": "–ú–µ–∫–µ–Ω–∂–∞–π: –ñ–∞–º–±—ã–ª –ñ–∞–±–∞–µ–≤ –∫”©—à., 55–ê, –ü–µ—Ç—Ä–æ–ø–∞–≤–ª. –¢–µ–ª–µ—Ñ–æ–Ω: 8 7152 34-02-40. –¢–æ–ª—ã“ì—ã—Ä–∞“õ: https://digitalurpaq.edu.kz/kk/kkbajlanysrukontakty.html",
    "–∞–∫—Ç –∑–∞–ª—ã": "“í–∏–º–∞—Ä–∞—Ç—Ç–∞ “Ø—à –∞–∫—Ç –∑–∞–ª—ã –±–∞—Ä: –±—ñ—Ä—ñ–Ω—à—ñ—Å—ñ ‚Äî –≤–µ—Å—Ç–∏–±—é–ª—å “Ø—Å—Ç—ñ–Ω–¥–µ, –µ–∫—ñ–Ω—à—ñ—Å—ñ ‚Äî —Å–æ–ª “õ–∞–Ω–∞—Ç—Ç–∞, “Ø—à—ñ–Ω—à—ñ—Å—ñ ‚Äî IT –∫–∞–±–∏–Ω–µ—Ç—Ç–µ—Ä—ñ–Ω—ñ“£ –∂–∞–Ω—ã–Ω–¥–∞“ì—ã –æ“õ—É –±–ª–æ–≥—ã–Ω–¥–∞.",
    "–∫”©–º–µ–∫": "“ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä: –∫–∞–±–∏–Ω–µ—Ç <–∞—Ç–∞—É—ã>, –±–∞–π–ª–∞–Ω—ã—Å, –∞–∫—Ç –∑–∞–ª—ã, –∂–∞–∑—ã–ª—É, –∫”©–º–µ–∫.",
    "–∂–∞–∑—ã–ª—É": "–û–Ω–ª–∞–π–Ω –Ω—ã—Å–∞–Ω: https://docs.google.com/forms/d/e/1FAIpQLSc5a5G0CY5XuOCpVHcg7qTDBdEGGkyVEjuBwihpfHncDCqv2A/viewform",
}

cabinet_map_ru = {
    "–ª–µ–≥–æ": "–ö–∞–±–∏–Ω–µ—Ç LEGO-–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî 1 —ç—Ç–∞–∂, –ø—Ä–∞–≤–æ–µ –∫—Ä—ã–ª–æ, —Ç—Ä–µ—Ç–∏–π —Å–ø—Ä–∞–≤–∞ –æ—Ç –≤—Ö–æ–¥–∞.",
    "—Ñ–∏–∑–∏–∫–∞": "–ö–∞–±–∏–Ω–µ—Ç –§–∏–∑–∏–∫–∏ ‚Äî –ª–µ–≤–æ–µ –∫—Ä—ã–ª–æ, 3 —ç—Ç–∞–∂, —Ä—è–¥–æ–º —Å –ê—Å—Ç—Ä–æ–Ω–æ–º–∏–µ–π.",
    "—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞": "–ö–∞–±–∏–Ω–µ—Ç –†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏ ‚Äî 2 —ç—Ç–∞–∂, –ª–µ–≤–æ–µ –∫—Ä—ã–ª–æ, –∫–æ–Ω–µ—Ü –∫–æ—Ä–∏–¥–æ—Ä–∞."
}
cabinet_map_kk = {
    "–ª–µ–≥–æ": "LEGO-“õ“±—Ä–∞—Å—Ç—ã—Ä—É –∫–∞–±–∏–Ω–µ—Ç—ñ ‚Äî 1 “õ–∞–±–∞—Ç, –æ“£ –∂–∞“õ “õ–∞–Ω–∞—Ç, –∫—ñ—Ä–µ–±–µ—Ä—ñ—Å—Ç–µ–Ω “Ø—à—ñ–Ω—à—ñ –µ—Å—ñ–∫.",
    "—Ñ–∏–∑–∏–∫–∞": "–§–∏–∑–∏–∫–∞ –∫–∞–±–∏–Ω–µ—Ç—ñ ‚Äî —Å–æ–ª –∂–∞“õ “õ–∞–Ω–∞—Ç, 3 “õ–∞–±–∞—Ç, –ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è –∫–∞–±–∏–Ω–µ—Ç—ñ–º–µ–Ω “õ–∞—Ç–∞—Ä.",
    "—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞": "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∫–∞–±–∏–Ω–µ—Ç—ñ ‚Äî 2 “õ–∞–±–∞—Ç, —Å–æ–ª –∂–∞“õ “õ–∞–Ω–∞—Ç, –¥”ô–ª—ñ–∑–¥—ñ“£ —Å–æ“£—ã–Ω–¥–∞."
}

# ---- Google Cloud TTS ----
def make_tts_bytes(text: str, lang_code: str):
    client = texttospeech.TextToSpeechClient()
    language = "kk-KZ" if lang_code=="kk" else "ru-RU"
    voice_name = "kk-KZ-Standard-A" if lang_code=="kk" else "ru-RU-Standard-D"
    synthesis_input = texttospeech.SynthesisInput(text=text)
    voice_params = texttospeech.VoiceSelectionParams(
        language_code=language,
        name=voice_name,
        ssml_gender=texttospeech.SsmlVoiceGender.NEUTRAL
    )
    audio_config = texttospeech.AudioConfig(audio_encoding=texttospeech.AudioEncoding.MP3)
    response = client.synthesize_speech(
        input=synthesis_input, voice=voice_params, audio_config=audio_config
    )
    return io.BytesIO(response.audio_content)

# ---- Chat UI —Å –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π ----
st.title("ü§ñ Digital Urpaq Support Bot")
chat_placeholder = st.empty()

with chat_placeholder.container():
    st.markdown('<div class="chat-container" id="chat-container">', unsafe_allow_html=True)
    for msg in st.session_state.messages:
        bubble = "user-bubble" if msg["role"] == "user" else "bot-bubble"
        st.markdown(f'<div class="chat-bubble {bubble}">{msg["text"]}</div>', unsafe_allow_html=True)
    st.markdown("</div>", unsafe_allow_html=True)
    st.markdown("""
        <script>
            var chatDiv = document.getElementById("chat-container");
            if (chatDiv) { chatDiv.scrollTop = chatDiv.scrollHeight; }
        </script>
    """, unsafe_allow_html=True)

# ---- Input Form ----
placeholder = "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑..." if st.session_state.lang == "kk" else "–í–∞—à –≤–æ–ø—Ä–æ—Å:"
with st.form(key="chat_form"):
    user_input = st.text_input(" ", placeholder=placeholder, key="user_input")
    submit_button = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")

# ---- Logic ----
if submit_button and user_input:
    msg = user_input.strip()
    st.session_state.messages.append({"role": "user", "text": msg})
    message = msg.lower()
    reply = None

    if st.session_state.lang == "ru":
        responses = responses_ru
        cabinet_map = cabinet_map_ru
        lang_code = "ru"
    else:
        responses = responses_kk
        cabinet_map = cabinet_map_kk
        lang_code = "kk"

    # –ö–∞–±–∏–Ω–µ—Ç—ã
    if "–∫–∞–±–∏–Ω–µ—Ç" in message:
        found = False
        for k, v in cabinet_map.items():
            if k in message:
                reply = v
                found = True
                break
        if not found:
            reply = "–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫–æ–π –∫–∞–±–∏–Ω–µ—Ç?" if lang_code=="ru" else "“ö–∞–π –∫–∞–±–∏–Ω–µ—Ç—Ç—ñ “õ–∞–∂–µ—Ç –µ—Ç–µ—Ç—ñ–Ω—ñ–Ω –Ω–∞“õ—Ç—ã–ª–∞“£—ã–∑?"
    else:
        found = False
        for k, v in responses.items():
            if k in message:
                reply = v
                found = True
                break
        if not found:
            reply = "–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ù–∞–ø–∏—à–∏—Ç–µ '–ø–æ–º–æ—â—å'." if lang_code=="ru" else "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, —Ç“Ø—Å—ñ–Ω–±–µ–¥—ñ–º. '–ö”©–º–µ–∫' –¥–µ–ø –∂–∞–∑—ã“£—ã–∑."

    st.session_state.messages.append({"role": "bot", "text": reply})

    # ---- –ê–≤—Ç–æ-TTS ----
    if st.session_state.tts_enabled:
        audio_bytes = make_tts_bytes(reply, lang_code)
        st.audio(audio_bytes, format="audio/mp3", start_time=0)

    st.session_state.user_input = ""
    st.experimental_rerun()

