import streamlit as st
import edge_tts
import asyncio
import os

st.set_page_config(page_title="Text-to-Speech App", page_icon="üó£Ô∏è")

st.title("Text-to-Speech —Å edge-tts üó£Ô∏è")
st.write("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É—Å–ª—ã—à–∞—Ç—å –æ–∑–≤—É—á–∫—É.")

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å)
voices = [
    "en-US-AriaNeural",
    "en-US-GuyNeural",
    "en-GB-LibbyNeural",
    "en-GB-RyanNeural",
    "ru-RU-DariyaNeural",
    "ru-RU-IlyaNeural"
]

text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è:")
voice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å:", voices)
output_file = "speech.mp3"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è TTS
def speak(text: str, voice: str = "en-US-AriaNeural", output_file: str = "speech.mp3"):
    async def tts():
        communicate = edge_tts.Communicate(text, voice)
        await communicate.save(output_file)
    asyncio.run(tts())
    return output_file

if st.button("–ü—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏"):
    if not text.strip():
        st.warning("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç!")
    else:
        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—á–∏..."):
            speak(text, voice, output_file)
        st.success("–ì–æ—Ç–æ–≤–æ! –°–ª—É—à–∞–π—Ç–µ –Ω–∏–∂–µ:")
        st.audio(output_file, format="audio/mp3")



