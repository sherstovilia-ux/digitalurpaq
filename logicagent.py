import streamlit as st
from gtts import gTTS
from io import BytesIO

# ---- Page setup ----
st.set_page_config(page_title="Digital Urpaq Support Bot", layout="wide")

# ---- Session State ----
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "bot", "text": "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ Digital Urpaq."}]
if "lang" not in st.session_state:
    st.session_state.lang = "ru"
if "tts_enabled" not in st.session_state:
    st.session_state.tts_enabled = True

# ---- Language Switch ----
col1, col2 = st.columns([4,1])
with col2:
    if st.button("“ö–∞–∑ / –†—É—Å"):
        st.session_state.lang = "kk" if st.session_state.lang=="ru" else "ru"
        st.session_state.messages.append({
            "role":"bot",
            "text":"–Ø–∑—ã–∫ –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π." if st.session_state.lang=="ru" else "–¢—ñ–ª “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–µ –∞—É—ã—Å—Ç—ã—Ä—ã–ª–¥—ã."
        })

# ---- Responses ----
responses = {
    "ru": {
        "–∫–æ–Ω—Ç–∞–∫—Ç—ã": "–ê–¥—Ä–µ—Å: —É–ª. –ñ–∞–º–±—ã–ª–∞ –ñ–∞–±–∞–µ–≤–∞ 55–ê, –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫...",
        "–ø–æ–º–æ—â—å": "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: –∫–∞–±–∏–Ω–µ—Ç <–Ω–∞–∑–≤–∞–Ω–∏–µ>, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –∞–∫—Ç–æ–≤—ã–π –∑–∞–ª, –∑–∞–ø–∏—Å—å, –ø–æ–º–æ—â—å.",
    },
    "kk": {
        "–±–∞–π–ª–∞–Ω—ã—Å": "–ú–µ–∫–µ–Ω–∂–∞–π: –ñ–∞–º–±—ã–ª –ñ–∞–±–∞–µ–≤ –∫”©—à., 55–ê, –ü–µ—Ç—Ä–æ–ø–∞–≤–ª...",
        "–∫”©–º–µ–∫": "“ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä: –∫–∞–±–∏–Ω–µ—Ç <–∞—Ç–∞—É—ã>, –±–∞–π–ª–∞–Ω—ã—Å, –∞–∫—Ç –∑–∞–ª—ã, –∂–∞–∑—ã–ª—É, –∫”©–º–µ–∫.",
    }
}

# ---- TTS Function (gTTS) ----
def make_tts(text, lang="ru"):
    tts = gTTS(text=text, lang=lang)
    audio_bytes = BytesIO()
    tts.write_to_fp(audio_bytes)
    audio_bytes.seek(0)
    return audio_bytes

# ---- Display chat ----
st.title("ü§ñ Digital Urpaq Bot")
for msg in st.session_state.messages:
    st.markdown(f"**{'–í—ã' if msg['role']=='user' else '–ë–æ—Ç'}:** {msg['text']}")

# ---- User Input ----
user_input = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
send_button = st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")

if send_button and user_input:
    st.session_state.messages.append({"role":"user","text":user_input})
    
    # ---- Simple response matching ----
    lang = st.session_state.lang
    msg_lower = user_input.lower()
    reply = "–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É." if lang=="ru" else "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, —Ç“Ø—Å—ñ–Ω–±–µ–¥—ñ–º."
    
    for key, text in responses[lang].items():
        if key in msg_lower:
            reply = text
            break
    
    st.session_state.messages.append({"role":"bot","text":reply})

    # ---- TTS ----
    if st.session_state.tts_enabled:
        lang_code = "ru" if lang=="ru" else "kk"
        audio = make_tts(reply, lang=lang_code)
        st.audio(audio, format="audio/mp3")
