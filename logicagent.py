import streamlit as st
import pyttsx3
import tempfile
import os

# ---- Page setup ----
st.set_page_config(page_title="Digital Urpaq Support Bot", layout="wide")

# ---- Session State ----
if "lang" not in st.session_state:
    st.session_state.lang = "ru"
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "bot","text": "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ Digital Urpaq. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –∫–∞–±–∏–Ω–µ—Ç–∞—Ö, –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö –∏–ª–∏ –∑–∞–ø–∏—Å–∏."}]
if "tts_enabled" not in st.session_state:
    st.session_state.tts_enabled = True

# ---- Responses ----
responses_ru = {"–∫–æ–Ω—Ç–∞–∫—Ç—ã":"–ê–¥—Ä–µ—Å: —É–ª. –ñ–∞–º–±—ã–ª–∞ –ñ–∞–±–∞–µ–≤–∞ 55–ê, –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫.","–ø–æ–º–æ—â—å":"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: –∫–∞–±–∏–Ω–µ—Ç <–Ω–∞–∑–≤–∞–Ω–∏–µ>, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –ø–æ–º–æ—â—å."}
responses_kk = {"–±–∞–π–ª–∞–Ω—ã—Å":"–ú–µ–∫–µ–Ω–∂–∞–π: –ñ–∞–º–±—ã–ª –ñ–∞–±–∞–µ–≤ –∫”©—à., 55–ê, –ü–µ—Ç—Ä–æ–ø–∞–≤–ª.","–∫”©–º–µ–∫":"“ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä: –∫–∞–±–∏–Ω–µ—Ç <–∞—Ç–∞—É—ã>, –±–∞–π–ª–∞–Ω—ã—Å, –∫”©–º–µ–∫."}

# ---- Offline TTS ----
engine = pyttsx3.init()

def tts_streamlit_bytes(text, lang):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç mp3-–±–∞–π—Ç—ã –¥–ª—è Streamlit —á–µ—Ä–µ–∑ pyttsx3"""
    # –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞ –ø–æ —è–∑—ã–∫—É
    voices = engine.getProperty('voices')
    voice_set = False
    for voice in voices:
        if lang=="ru" and "ru" in voice.id.lower():
            engine.setProperty('voice', voice.id)
            voice_set = True
            break
        elif lang=="kk" and "kz" in voice.id.lower():
            engine.setProperty('voice', voice.id)
            voice_set = True
            break
    if not voice_set:
        engine.setProperty('voice', voices[0].id)  # fallback

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as f:
        engine.save_to_file(text, f.name)
        engine.runAndWait()
        f.seek(0)
        data = f.read()
    os.remove(f.name)
    return data

# ---- Chat UI ----
st.title("ü§ñ Digital Urpaq Support Bot")
for msg in st.session_state.messages:
    bubble = "user" if msg["role"]=="user" else "bot"
    st.markdown(f"**{msg['role']}**: {msg['text']}")

# ---- Input Form ----
with st.form(key="user_input_form"):
    placeholder = "–í–∞—à –≤–æ–ø—Ä–æ—Å:" if st.session_state.lang=="ru" else "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑..."
    user_input = st.text_input(placeholder)
    submit_button = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")

if submit_button and user_input:
    msg = user_input.strip()
    st.session_state.messages.append({"role":"user","text":msg})
    
    # ---- Logic ----
    message = msg.lower()
    lang = st.session_state.lang
    responses = responses_ru if lang=="ru" else responses_kk
    
    reply = None
    for k,v in responses.items():
        if k in message:
            reply = v
            break
    if not reply:
        reply = "–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª." if lang=="ru" else "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, —Ç“Ø—Å—ñ–Ω–±–µ–¥—ñ–º."
    st.session_state.messages.append({"role":"bot","text":reply})

    # ---- TTS ----
    if st.session_state.tts_enabled and reply:
        audio_bytes = tts_streamlit_bytes(reply, lang)
        st.audio(audio_bytes, format="audio/mp3", start_time=0)

# ---- TTS Toggle ----
st.checkbox("–í–∫–ª—é—á–∏—Ç—å TTS / TTS “õ–æ—Å—É", value=st.session_state.tts_enabled, key="tts_enabled")



